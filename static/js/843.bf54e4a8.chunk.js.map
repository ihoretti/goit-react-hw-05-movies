{"version":3,"file":"static/js/843.bf54e4a8.chunk.js","mappings":"wNAGaA,EAAOC,EAAAA,GAAAA,GAAH,4GAOJC,EAAOD,EAAAA,GAAAA,GAAH,6DAKJE,GAAgBF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,2J,SCK1B,EAhBmB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAACR,EAAD,WACE,SAACC,EAAD,CAAeQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAAnD,gBACGI,QADH,IACGA,EAAAA,EAAS,cAFHD,EADD,KASjB,C,4JChBYK,EAAOb,EAAAA,GAAAA,KAAH,sBACJc,EAAQd,EAAAA,GAAAA,MAAH,wHAOLe,EAAYf,EAAAA,GAAAA,OAAH,yJ,SCPTgB,EAAY,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,kBAAmBC,EAAmB,EAAnBA,aAU7C,OACE,UAACL,EAAD,CAAMM,SANa,SAAAC,GACnBA,EAAEC,iBACFH,GACD,EAGC,WACE,SAACJ,EAAD,CAAOQ,KAAK,OAAOC,SAXD,SAAAH,GACpBH,EAAkBG,EAAEI,OAAOC,MAAMC,OAClC,KAUG,SAACX,EAAD,CAAWO,KAAK,SAAhB,sBAGL,E,4DC6DD,EApEe,WAAO,IAAD,EACnB,GAAwCK,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KAEMC,EAAW,UAAGT,EAAaU,IAAI,gBAApB,QAAgC,IAIjDC,EAAAA,EAAAA,YAAU,WACR,GAAoB,KAAhBF,EAAJ,CAIA,IAAMG,EAAS,mCAAG,WAAMH,GAAN,yFAEdD,GAAU,GAFI,UAGKK,EAAAA,EAAAA,IAAeJ,GAHpB,UAGRK,EAHQ,OAIRT,EAAOS,EAAKT,KAAKU,QAEvBT,EAAQD,GAEY,IAAhBA,EAAKW,OARK,sBASN,IAAIC,MAAM,oBATJ,0DAYdC,EAAAA,EAAAA,IAAM,KAAMC,QAAS,CACnBC,SAAUF,EAAAA,GAAAA,SAAAA,gBAbE,yBAgBdV,GAAU,GAhBI,6EAAH,sDAoBfI,EAAUH,EAtBT,CAuBF,GAAE,CAACA,IAeJ,OACE,UAAC,IAAD,CACEY,QAAQ,OACRC,cAAc,SACdC,eAAe,SACfC,WAAW,SACXC,OAAO,OALT,WAOE,SAACrC,EAAD,CACEC,kBAtBoB,SAAAQ,GACxBO,EAASP,EACV,EAqBKP,aAnBe,WACL,KAAVa,IACFe,EAAAA,EAAAA,IAAM,kBAAmB,CACvBE,SAAUF,EAAAA,GAAAA,SAAAA,gBAGdjB,EAA0B,KAAVE,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAC7C,IAcII,GAAS,SAACmB,EAAA,EAAD,KAAa,SAACC,EAAA,EAAD,CAAYnD,OAAQ6B,MAGhD,C","sources":["components/ListMovies/ListMovies.styled.js","components/ListMovies/ListMovies.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  margin: 5px;\n  list-style: none;\n`;\n\nexport const LinkItemMovie = styled(Link)`\n  text-decoration: none;\n  color: rgb(4, 120, 128);\n  :hover {\n    background-color: rgb(4, 120, 128);\n    color: white;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Item, LinkItemMovie, List } from './ListMovies.styled';\n\nconst ListMovies = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title }) => (\n        <Item key={id}>\n          <LinkItemMovie to={`/movies/${id}`} state={{ from: location }}>\n            {title ?? 'no title'}\n          </LinkItemMovie>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ListMovies;\n\nListMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form``;\nexport const Input = styled.input`\n  width: 200px;\n  height: 25px;\n  border: 1px solid rgb(4, 120, 128);\n  border-radius: 5px;\n`;\n\nexport const SearchBtn = styled.button`\n  margin: 5px;\n  height: 30px;\n  border: none;\n  border-radius: 5px;\n  background-color: rgb(4, 120, 128);\n  color: white;\n`;\n","import PropTypes from 'prop-types';\nimport { Form, Input, SearchBtn } from './SearchBox.styled';\n\nexport const SearchBox = ({ handleChangeInput, handleSubmit }) => {\n  const onChangeInput = e => {\n    handleChangeInput(e.target.value.trim());\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    handleSubmit();\n  };\n\n  return (\n    <Form onSubmit={onSubmitForm}>\n      <Input type=\"text\" onChange={onChangeInput} />\n      <SearchBtn type=\"Submit\">Submit</SearchBtn>\n    </Form>\n  );\n};\n\nSearchBox.propTypes = {\n  handleChangeInput: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import { toast } from 'react-toastify';\n\nimport { getSearchMovie } from 'API/fetchMovies';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport ListMovies from '../../components/ListMovies/ListMovies';\nimport { Loader } from 'components/Loader/Loader';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from 'components/Container/Container.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [data, setData] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  const filterParam = searchParams.get('query') ?? '';\n\n  //const ListMovies = lazy(()=> import('../../components/ListMovies/ListMovies'))\n\n  useEffect(() => {\n    if (filterParam === '') {\n      return;\n    }\n\n    const getMovies = async filterParam => {\n      try {\n        setLoader(true);\n        const resp = await getSearchMovie(filterParam);\n        const data = resp.data.results;\n\n        setData(data);\n\n        if (data.length === 0) {\n          throw new Error('Not a valid word');\n        }\n      } catch (error) {\n        toast(error.message, {\n          position: toast.POSITION.BOTTOM_CENTER,\n        });\n      } finally {\n        setLoader(false);\n      }\n    };\n\n    getMovies(filterParam);\n  }, [filterParam]);\n\n  const handleChangeInput = value => {\n    setQuery(value);\n  };\n\n  const handleSubmit = () => {\n    if (query === '') {\n      toast('Write something', {\n        position: toast.POSITION.BOTTOM_CENTER,\n      });\n    }\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  return (\n    <Container\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      margin=\"50px\"\n    >\n      <SearchBox\n        handleChangeInput={handleChangeInput}\n        handleSubmit={handleSubmit}\n      />\n      {loader ? <Loader /> : <ListMovies movies={data} />}\n    </Container>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","Item","LinkItemMovie","Link","movies","location","useLocation","map","id","title","to","state","from","Form","Input","SearchBtn","SearchBox","handleChangeInput","handleSubmit","onSubmit","e","preventDefault","type","onChange","target","value","trim","useSearchParams","searchParams","setSearchParams","useState","query","setQuery","data","setData","loader","setLoader","filterParam","get","useEffect","getMovies","getSearchMovie","resp","results","length","Error","toast","message","position","display","flexDirection","justifyContent","alignItems","margin","Loader","ListMovies"],"sourceRoot":""}